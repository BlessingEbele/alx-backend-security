# Generated by Django 5.2.5 on 2025-09-01 16:09

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BlockedIP',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip_address', models.GenericIPAddressField(unique=True)),
                ('blocked_at', models.DateTimeField(auto_now_add=True)),
                ('reason', models.CharField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='IPAddress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip_address', models.GenericIPAddressField(unique=True)),
                ('first_seen', models.DateTimeField(auto_now_add=True)),
                ('last_seen', models.DateTimeField(auto_now=True)),
                ('visit_count', models.PositiveIntegerField(default=1)),
            ],
        ),
        migrations.CreateModel(
            name='IPBlacklist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip_address', models.GenericIPAddressField(unique=True)),
                ('blacklisted_at', models.DateTimeField(auto_now_add=True)),
                ('reason', models.CharField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='IPWhitelist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip_address', models.GenericIPAddressField(unique=True)),
                ('whitelisted_at', models.DateTimeField(auto_now_add=True)),
                ('reason', models.CharField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='RequestLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip_address', models.GenericIPAddressField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('path', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='IPActivitySummary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_visits', models.PositiveIntegerField(default=0)),
                ('total_accesses', models.PositiveIntegerField(default=0)),
                ('last_activity', models.DateTimeField(auto_now=True)),
                ('ip_address', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='ip_tracking.ipaddress')),
            ],
        ),
        migrations.CreateModel(
            name='IPAccessLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('access_time', models.DateTimeField(auto_now_add=True)),
                ('accessed_url', models.URLField()),
                ('response_status', models.PositiveIntegerField()),
                ('ip_address', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ip_tracking.ipaddress')),
            ],
        ),
        migrations.CreateModel(
            name='IPAnomalyDetection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('anomaly_type', models.CharField(max_length=100)),
                ('detected_at', models.DateTimeField(auto_now_add=True)),
                ('details', models.TextField(blank=True, null=True)),
                ('ip_address', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ip_tracking.ipaddress')),
            ],
        ),
        migrations.CreateModel(
            name='IPBehavioralAnalysis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('behavior_pattern', models.TextField()),
                ('analyzed_at', models.DateTimeField(auto_now_add=True)),
                ('ip_address', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ip_tracking.ipaddress')),
            ],
        ),
        migrations.CreateModel(
            name='IPCampaignTracking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('campaign_name', models.CharField(max_length=100)),
                ('source', models.CharField(max_length=100)),
                ('medium', models.CharField(max_length=100)),
                ('tracked_at', models.DateTimeField(auto_now_add=True)),
                ('ip_address', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ip_tracking.ipaddress')),
            ],
        ),
        migrations.CreateModel(
            name='IPConnectionType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('connection_type', models.CharField(blank=True, max_length=100, null=True)),
                ('isp', models.CharField(blank=True, max_length=255, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('ip_address', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='ip_tracking.ipaddress')),
            ],
        ),
        migrations.CreateModel(
            name='IPDataUsage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_sent', models.BigIntegerField(default=0)),
                ('data_received', models.BigIntegerField(default=0)),
                ('recorded_at', models.DateTimeField(auto_now_add=True)),
                ('ip_address', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ip_tracking.ipaddress')),
            ],
        ),
        migrations.CreateModel(
            name='IPDeviceInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('device_type', models.CharField(blank=True, max_length=100, null=True)),
                ('operating_system', models.CharField(blank=True, max_length=100, null=True)),
                ('browser', models.CharField(blank=True, max_length=100, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('ip_address', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='ip_tracking.ipaddress')),
            ],
        ),
        migrations.CreateModel(
            name='IPErrorLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('error_time', models.DateTimeField(auto_now_add=True)),
                ('error_message', models.TextField()),
                ('stack_trace', models.TextField(blank=True, null=True)),
                ('ip_address', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ip_tracking.ipaddress')),
            ],
        ),
        migrations.CreateModel(
            name='IPGeofencing',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('allowed_countries', models.TextField(help_text='Comma-separated country codes')),
                ('blocked_countries', models.TextField(help_text='Comma-separated country codes')),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('ip_address', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ip_tracking.ipaddress')),
            ],
        ),
        migrations.CreateModel(
            name='IPGeolocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country', models.CharField(blank=True, max_length=100, null=True)),
                ('region', models.CharField(blank=True, max_length=100, null=True)),
                ('city', models.CharField(blank=True, max_length=100, null=True)),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
                ('isp', models.CharField(blank=True, max_length=255, null=True)),
                ('ip_address', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='ip_tracking.ipaddress')),
            ],
        ),
        migrations.CreateModel(
            name='IPNotification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification_type', models.CharField(max_length=100)),
                ('message', models.TextField()),
                ('sent_at', models.DateTimeField(auto_now_add=True)),
                ('read', models.BooleanField(default=False)),
                ('ip_address', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ip_tracking.ipaddress')),
            ],
        ),
        migrations.CreateModel(
            name='IPReferral',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('referral_url', models.URLField()),
                ('referred_at', models.DateTimeField(auto_now_add=True)),
                ('ip_address', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ip_tracking.ipaddress')),
            ],
        ),
        migrations.CreateModel(
            name='IPReputation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reputation_score', models.IntegerField(default=0)),
                ('last_checked', models.DateTimeField(auto_now=True)),
                ('details', models.TextField(blank=True, null=True)),
                ('ip_address', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='ip_tracking.ipaddress')),
            ],
        ),
        migrations.CreateModel(
            name='IPReputationHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reputation_score', models.IntegerField()),
                ('changed_at', models.DateTimeField(auto_now_add=True)),
                ('reason', models.TextField(blank=True, null=True)),
                ('ip_address', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ip_tracking.ipaddress')),
            ],
        ),
        migrations.CreateModel(
            name='IPSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_start', models.DateTimeField(auto_now_add=True)),
                ('session_end', models.DateTimeField(blank=True, null=True)),
                ('user_agent', models.CharField(blank=True, max_length=255, null=True)),
                ('ip_address', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ip_tracking.ipaddress')),
            ],
        ),
        migrations.CreateModel(
            name='IPThreatIntelligence',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('threat_source', models.CharField(max_length=100)),
                ('threat_details', models.TextField()),
                ('reported_at', models.DateTimeField(auto_now_add=True)),
                ('ip_address', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ip_tracking.ipaddress')),
            ],
        ),
        migrations.CreateModel(
            name='IPThreatLevel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('threat_level', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], default='low', max_length=50)),
                ('assessed_at', models.DateTimeField(auto_now=True)),
                ('details', models.TextField(blank=True, null=True)),
                ('ip_address', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='ip_tracking.ipaddress')),
            ],
        ),
        migrations.CreateModel(
            name='IPUsagePattern',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pattern_description', models.TextField(blank=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('ip_address', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='ip_tracking.ipaddress')),
            ],
        ),
        migrations.CreateModel(
            name='VisitLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('visit_time', models.DateTimeField(auto_now_add=True)),
                ('user_agent', models.CharField(blank=True, max_length=255, null=True)),
                ('ip_address', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ip_tracking.ipaddress')),
            ],
        ),
    ]
